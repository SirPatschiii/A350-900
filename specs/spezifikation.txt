01 | Attribute | Datentypen und Identität | Assoziation
     Ein airplane ist charakterisiert durch manufacturer (Airbus), model (350-900), overall length (66.89 m),
     cabin length (51.04 m), wing span (geometric, 64.75 m), height (17.05 m), range (15 372 km), mmo (M0.89),
     maximum take-off weight (268 t), engine power (2 x 84,000 lb), cruising speed (0.85 Mach), fuel consumption (ca. 2.9 l/100 paxkm),
     # business class (48), # premium economy (21), # economy (224),
     id (D-AIXD), carrier (Lufthansa), serialnumber = S9VNG45XPI, manufacturing date = 22.11.2023, delivery = 12/2023

     Mit Ausnahme des carrier sind alle Attribute zu den technischen Werte nicht veränderbar.
     Zwei Airplane mit der gleichen serialnumber sind gleich.

     Bei Aufruf von toString() sind manufacturer, model, serialnumber, id, carrier
     und das Alter in Tagen zum aktuellen Datum auszugeben.

     Ein Airplane hat einen Body und auf der linken und rechten Seite je einen Wing.

02 | Datenstrukturen | Cabin
     Die Cabin ist als Komposition mit dem Body assoziiert.
     Business Class  : Reihen 1-8 mit je den Sitzplätzen A,C,D,G,H,K = 48
     Premium Economy : Reihen 12, 14 und 15 mit je den Sitzplätzen A,C,D,E,G,H,K = 21
     Economy         : Reihe 16 mit den Sitzplätzen A,C,D,E,G = 5
                       Reihen 18-26 mit den Sitzplätzen A,B,C,D,E,G,H,J,K = 81
                       Reihe 27 mit den Sitzplätzen B,C,D,E,G,H,J = 7
                       Reihen 28-41 mit den Sitzplätzen A,B,C,D,E,G,H,J,K = 126
                       Reihe 42 mit den Sitzplätzen A,C,D,E,G = 5
                       = 224

    Bei Aufruf von toString() erfolgt die Ausgabe
    Cabin : BUSINESS CLASS  1,2,3,4,5,6,7,8 [A,C,D,G,H,K] : 48
            PREMIUM_ECONOMY 12,14,15 [A,C,D,E,G,H,K] : 21
            ECONOMY         16 [A,C,D,E,G] : 5
                            18,19,20,21,22,23,24,25,26,27,28 [A,B,C,D,E,G,H,J,K] : 81
                            27 [B,C,D,E,G,H,J] : 7
                            28,29,30,31,32,33,34,35,36,37,38,39,40,41 [A,B,C,D,E,G,H,J,] : 126
                            42 [A,C,D,E,G] : 5
                            : 224
            : 293
 
03 | Assoziation | Komposition
     Eine JetEngine besteht aus [i] Fan, [ii] LowPressureCompressor, [iii] HighPressureCompressor, 
     [iv] HighPressureTurbine und [v] CombustionChamber.

     Der Fan besteht aus einer vorderen und hinteren Unit, realisiert als Komposition.
     Die vordere Unit hat 48 Blade der Größe L.
     Die hintere Unit hat 45 Blade der Größe L.
     Die vordere und hintere Unit ist als Komposition mit dem LowPressureShaft assoziiert.

     Der LowPressureCompressor besteht aus einer vorderen und hinteren Unit.
     Die vordere und hintere Unit hat 36 Blade der Größe M.
     Die vordere und hintere Unit ist als Komposition mit dem LowPressureShaft assoziiert.

     Der HighPressureCompressor hat sechs Units, realisiert als Komposition.
     Die 1./2. Unit hat 36 Blade der Größe S.
     Die 3./4. Unit hat 32 Blade der Größe S.
     Die 5./6. Unit hat 30 Blade der Größe S.
     Die sechs Units sind als Komposition mit dem HighPressureShaft assoziiert.

     Die HighPressureTurbine besteht aus einer vorderen und hinteren Unit, realisiert als Komposition.
     Die vordere und hintere Unit hat 36 Blade der Größe M.
     Die vordere und hintere Unit ist als Komposition mit dem HighPressureShaft assoziiert.

     Der LowPressureTurbine besteht aus einer vorderen und hinteren Unit.
     Die vordere und hintere Unit hat 36 Blade der Größe M.
     Die vordere und hintere Unit ist als Komposition mit dem LowPressureShaft assoziiert.

     Schematisch : https://www.brookings.edu/articles/new-jet-engine-designs-cut-us-military-fuel-costs/

04 | Consumer/Producer | Schnittstelle
     max. 1050 km/h -> 10500 rpm
     -> vereinfacht : 1 km/h = 10 rpm

     MUC -> SIN : 10100 km
     Flugdauer : ca. 12-13 Stunden -> 775 km/h -> 7750 rpm
     10100 * 2,9 l/100 = 292,9 l * 293 = ca. 86000 l
     -> vereinfacht : 1 rpm = 1 l für beide Triebwerke, je 0.5 l je Triebwerk

     3 Tanks : [i] left wing : 27500 l (125x22x10); center : 82500 l (125x55x12); right wing: 27500 l (125x22x10)
     Eine zentrale Instanz FuelManagement verwaltet die Versorgung mit fuel der beiden JetEngine.
     Zunächst beziehen die JetEngine den benötigten fuel von dem Tank auf der jeweiligen Triebswerksseite.
     Bei Erreichen einer Notreserve von 10% erfolgt ein Umschalten,
     d.h. die linke und rechte JetEngine beziehen den fuel vom Tank "central".

     Aus Aspekten der Vereinfachung je Iteration konstant 775 km/h -> 7750 rpm -> 3875 l je Iteration und JetEngine.
     nach Iteration 01 : left 23625, right 23625
     nach Iteration 02 : left 19750, right 19750
     nach Iteration 03 : left 15875, right 15875
     nach Iteration 04 : left 12000, right 12000
     nach Iteration 05 : left  8125, right  8125
     nach Iteration 06 : left  4250, right  4250
     nach Iteration 07 : left   375, right  375   // nicht zulässig, da Notreserve von 10% unterschritten
                         left  4250, right  4250  // Fuel verbleibt. 
                      -> Umschalten : center  74750
     nach Iteration 08 : center 67000
     nach Iteration 09 : center 59250
     nach Iteration 10 : center 51500
     nach Iteration 11 : center 43750
     nach Iteration 12 : center 36000
     nach Iteration 13 : center 28250

     (27500 + 82500 + 27500) = 137500 - (13 * 7750) = 137500 - 100750 = 36570
  
     Die beiden JetEngine werden von einer zentralen Instanz JetEngineMediator gesteuert.

     startup()
     setSpeed(int mph)   // Umrechnung nach kmh und aufrunden auf ganze Zahl.
                            Faktor für die Umrechnung ist in einer zentralen Configuration als Enumeration definiert.
     shutdown()
          
05 | Generalisierung | I/O | ArrayList
     Ein (abstrakter) Human ist charakterisiert durch firstname, lastname, gender, date of birth.
     Ein Human verfügt über einen Head, einen Body, zwei Arms und zwei Legs.
     Je Arm existiert eine Hand  
     Ein Passenger ist ein Human mit einem passport (passportID), einem Ticket sowie keinem/einem oder mehreren baggage.
     Die auf Basis der Datendatei "data.csv" initialisierten Passenger werden in einer ArrayList gespeichert.

06 | I/O und TreeMap
     Ein Ticket ist charakterisiert durch uuid, bookingID, flight, from, to, departure, arrival, bookingClass und seat.
     Die auf Basis der Datendatei "data.csv" initialisierten Ticket werden in einer TreeMap gespeichert.

07 | I/O und Datenstruktur
     In einer geeigneten Datenstruktur ist die Zuordnung zwischen Passenger und Ticket definiert.

08 | Check-In und Boarding

     [Check-In]
     Der automatisierte Check-In am Airport wird an zehn CheckInDesk durchgeführt.
     Ein CheckInDesk verfügt über [i] je ein Reader für Passport, Iris und FingerPrint, [ii] ein ConveyorBelt und [iii] einen Printer.
     Jedem CheckInDesk ist eine Queue mit einer Kapazität von maximal 30 Passager zugeordnet.
     Die initialisierten Passenger werden sukzessive - beginnend mit der ersten Queue - eingereiht.
     Der Prozess "Check-In" beginnt mit der ersten Queue.
     a) Der Passenger authentifiziert sich wahlweise (zufällig bestimmt) mit Passport, Iris oder FingerPrint.
     b) Liegt gegen den Passenger ein Warrant vor, erfolgt die Festnahme des Passenger und die Beschlagnahmung des Baggage
        durch einen FederalPoliceOfficer. Der Passenger wird mit seinem Baggage in ein Prison für eine beliebige Anzahl von Personen
        bei der FederalPolice verbracht.
     c) Nach erfolgreicher Authentifizierung stellt der Passenger sukzessive die Baggage auf das ConveyorBelt.
     d) Das Baggage wird gewogen und der BaggageTag mit einer fortlaufenden sequenceID beginnend bei 1 erstellt und mit dem Ticket verknüpft.
     e) Der BaggageTag wird gedruckt und vom Passenger an das Baggage "geheftet".
     f) Das ConveyorBelt bewegt sich nach vorne zu einem Roboterarm.
     g) Das Baggage mit dem BaggageTag wird in einem 3-dimensionalen Bereich L = 10, B = 10 und Höhe = 5
        durch den Roboterarm eingelagert.
     h) Das ConveyorBelt bewegt sich zurück.
     i) Nachdem der Passenger alle Baggage aufgegeben hat, wird auf Basis des Ticket der BoardingPass gedruckt.
     j) In einem Wartebereich L = 20 und B = 30 nimmt der Passenger einen zufällig gewählten freien Platz ein.

     [Boarding]
     Das Boarding startet wenn sich alle zugelassenen Passagiere für den Flug im Wartebereich befinden.
     Beginnend mit dem ersten Sitzplatz vorne links im Wartebereich werden alle Passagiere priorisiert
     nach der Buchungsklasse (BUSINESS, PREMIUM_ECONOMY und ECONOMY) in eine Warteschlange für das Boarding eingereiht.
     Nach Initialisierung der Warteschlange begeben sich die Passagiere sukzessive in das Airplane
     und nehmen den jeweils zugewiesenen Sitzplatz gemäß BoardingPass ein.

     Nach dem Boarding werden auf Basis der BoardingPass die Reports
     report01.txt : aufsteigend nach seat sortiert
     report02.txt : aufsteigend nach lastname und dann firstname sortiert
     report03.txt : nach bookingClass BUSINESS, PREMIUM_ECONOMY und ECONOMY sortiert,
                    innerhalb der bookingClass aufsteigend nach lastname und dann firstname sortiert
     generiert.

09 | Baggage | Container
     354
     Maximale Kapazität Baggage je Container = 45 (B:5 x L:3 x H:3) : 8 Container
     Baggage wird aufeinandergestapelt (Stack).
     Die leeren Container werden am Airport auf einem Platz 2x2 zwischengelagert.
     Der dem 3-dimensionalen Bereich zugeordnete Roboterarm belädt die leeren Container.
     Baggage ist auf die Container so zu verteilen, dass bei der Ausladung die Prioriät BUSINESS, PREMIUM_ECONOMY
     und ECONOMY berücksichtigt wird.

10 | CargoArea | Ladeplan | Optimierung
     Das Airplane verfügt eine CargoArea.
     Die CargoArea gliedert sich in einen linken und rechten Bereich mit einer Kapazität für je 4 Container auf.
     Die linke und rechte Seite ist bezüglich dem Gewicht weitestgehend ausbalanciert.
     Der Ladeplan ist im Format JSON zu speichern.

11 | Verladung | Autonomes Fahrzeug
     In einer dem Airport zugeordneten Verwaltungseinheit sind drei autonome Fahrzeuge registriert.
     Die Verwaltungseinheit lädt den Ladeplan.
     Ein autonomes Fahrzeug hat einen Ladebereich für einen Container.
     Ein zufällig ausgewähltes Fahrzeug fährt zum 3-dimensionalen Bereich und nimmt den Container gemäß Ladeplan auf.
     Das Fahrzeug fährt zum Airplane und übergibt den Container einem Lifter im Status down.
     Der Lifter fährt hoch (Status up) und übergibt den Container der CargoArea des Airplane an die relevante Position.